// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace PaymentService.Migrations
{
    [DbContext(typeof(PaymentDb))]
    [Migration("20210319054511_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasDefaultSchema("payment")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.4")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PaymentService.ApplicationCore.Domain.Entities.Payment", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("id");

                    b.Property<int?>("MoneyValueTempId")
                        .HasColumnType("int")
                        .HasColumnName("money_value_temp_id");

                    b.Property<Guid?>("PayeeId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("payee_id");

                    b.Property<Guid?>("PayerId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("payer_id");

                    b.Property<int>("PaymentStatus")
                        .HasColumnType("int")
                        .HasColumnName("payment_status");

                    b.Property<int?>("PointsValueTempId")
                        .HasColumnType("int")
                        .HasColumnName("points_value_temp_id");

                    b.Property<int>("TransactionType")
                        .HasColumnType("int")
                        .HasColumnName("transaction_type");

                    b.HasKey("Id");

                    b.HasIndex("PayeeId");

                    b.HasIndex("PayerId");

                    b.ToTable("Payments");
                });

            modelBuilder.Entity("PaymentService.ApplicationCore.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("User");
                });

            modelBuilder.Entity("PaymentService.ApplicationCore.Domain.Entities.Payment", b =>
                {
                    b.HasOne("PaymentService.ApplicationCore.Domain.Entities.User", "Payee")
                        .WithMany()
                        .HasForeignKey("PayeeId");

                    b.HasOne("PaymentService.ApplicationCore.Domain.Entities.User", "Payer")
                        .WithMany()
                        .HasForeignKey("PayerId");

                    b.OwnsOne("PaymentService.ApplicationCore.Domain.ValueObjects.MoneyValue", "MoneyValue", b1 =>
                        {
                            b1.Property<Guid>("PaymentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(20,0)");

                            b1.Property<string>("Currency")
                                .HasColumnType("nvarchar(max)");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.WithOwner()
                                .HasForeignKey("PaymentId");
                        });

                    b.OwnsOne("PaymentService.ApplicationCore.Domain.ValueObjects.PointsValue", "PointsValue", b1 =>
                        {
                            b1.Property<Guid>("PaymentId")
                                .HasColumnType("uniqueidentifier");

                            b1.Property<decimal>("Amount")
                                .HasColumnType("decimal(18,2)");

                            b1.HasKey("PaymentId");

                            b1.ToTable("Payments");

                            b1.WithOwner()
                                .HasForeignKey("PaymentId");
                        });

                    b.Navigation("MoneyValue");

                    b.Navigation("Payee");

                    b.Navigation("Payer");

                    b.Navigation("PointsValue");
                });
#pragma warning restore 612, 618
        }
    }
}
